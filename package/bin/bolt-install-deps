#!/bin/sh -e

###############################################################################
# FUNCTIONS
###############################################################################

usage() {
    cat << "EOF"
Copyright (C) 2022 Tobias Koch <tobias.koch@gmail.com>

Install the build dependencies for a Bolt Linux package recipe.

USAGE:

  bolt-install-deps [OPTIONS] package.xml

OPTIONS:

  -h, --help           Print this help message and exit.

  --build-for=<what>   Specify if the package will be built for the target or
                       for the tools folder. `what` must be one of 'target'
                       (default), 'tools' or 'cross-tools'.

EOF
}

die() {
    echo "bolt-install-deps: error: $1" >&2
    exit 1
}

determine_install_command() {
    if [ $(cat /etc/os-release | grep ^ID= | cut -d= -f2) = "bolt" ]; then
        echo "opkg install"
    elif [ -f /etc/debian_release ]; then
        echo "apt-get install"
    else
        die "the current OS platform is not supported."
    fi
}

try_list_build_dependencies() {
    if ! bolt-pack --build-for="$BUILD_FOR" --list-deps $1 >/dev/null 2>&1; then
        die "failed to list build dependencies, check input file!"
    fi
}

list_build_dependencies() {
    bolt-pack --build-for="$BUILD_FOR" --list-deps $1 | \
        sed -e 's/,/\n/g' -e 's/([^)]\+)//g' | awk '{print $1}'
}

###############################################################################
# VARIABLES
###############################################################################

BUILD_FOR=target
INSTALL_CMD=$(determine_install_command)

###############################################################################
# SETUP
###############################################################################

while true; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        --build-for)
            BUILD_FOR="$2"
            shift 2
            ;;
        --build-for=*)
            BUILD_FOR=$(echo $1 | cut -d= -f2)
            shift
            ;;
        -*)
            die "unknown option: $1"
            ;;
        *)
            break
            ;;
    esac
done

case "$BUILD_FOR" in
    target|tools|cross-tools)
        true
        ;;
    *)
        die "invalid argument --build-for=\"$BUILD_FOR\""
        ;;
esac

if [ $# -ne 1 ]; then
    usage
    exit 1
fi

test -f "$1" || die "no such file: $1"

###############################################################################
# MAIN
###############################################################################

try_list_build_dependencies "$1"
$INSTALL_CMD $(list_build_dependencies "$1")
